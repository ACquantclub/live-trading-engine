name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - uses: actions/checkout@v4

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

  build-release:
    name: Build Release - ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    needs: release
    strategy:
      matrix:
        config:
        - {
            name: "Linux",
            os: ubuntu-latest,
            artifact: "live-trading-engine-linux",
            build_type: "Release",
            cc: "gcc-12",
            cxx: "g++-12"
          }
        - {
            name: "macOS",
            os: macos-latest,
            artifact: "live-trading-engine-macos", 
            build_type: "Release",
            cc: "clang",
            cxx: "clang++"
          }

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies (Ubuntu)
      if: startsWith(matrix.config.os, 'ubuntu')
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          cmake \
          ninja-build \
          ${{ matrix.config.cc }} \
          ${{ matrix.config.cxx }} \
          python3 \
          python3-pip
        
        # Install Conan
        pip3 install conan==1.61.0
        
        # Configure Conan
        conan profile detect --force
        conan profile update settings.compiler.cppstd=23 default

    - name: Install dependencies (macOS)
      if: startsWith(matrix.config.os, 'macos')
      run: |
        brew install cmake ninja python3
        
        # Install Conan
        pip3 install conan==1.61.0
        
        # Configure Conan
        conan profile detect --force
        conan profile update settings.compiler.cppstd=23 default

    - name: Configure and build
      run: |
        export CC=${{ matrix.config.cc }}
        export CXX=${{ matrix.config.cxx }}
        
        # Install Conan dependencies
        mkdir -p build
        cd build
        conan install .. --build=missing -s build_type=${{ matrix.config.build_type }}
        
        # Configure CMake
        cmake .. \
          -G Ninja \
          -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }} \
          -DCMAKE_CXX_STANDARD=23 \
          -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake
        
        # Build
        ninja

    - name: Run tests
      run: |
        cd build
        ctest --output-on-failure

    - name: Package artifacts
      run: |
        mkdir -p release
        cd release
        
        # Copy main executable
        cp ../build/apps/trading_engine/trading_engine ./
        
        # Copy configuration files
        cp ../config/trading_engine.json ./
        
        # Copy README and LICENSE
        cp ../README.md ./
        cp ../LICENSE ./
        
        # Create archive
        tar -czf ${{ matrix.config.artifact }}.tar.gz *

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ./release/${{ matrix.config.artifact }}.tar.gz
        asset_name: ${{ matrix.config.artifact }}.tar.gz
        asset_content_type: application/gzip 